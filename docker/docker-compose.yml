version: '3.7'
services:
    mongo:
      networks:
        - back
      image: mongo:4.0.26
      env_file:
        - ./environement/.db.env
      volumes:
        - db_data:/data/db
      restart: on-failure

    postgres:
      networks:
        - back
      image: postgres:13.4-alpine
      env_file:
        - ./environement/.db.env
      volumes:
        - db_data:/var/lib/postgresql/data
      restart: on-failure

    redis:
      networks:
        - back
      image: redis:alpine
      volumes:
        - redis_data:/data
      restart: on-failure

    api_prod:
      networks:
        - back
      build: 
        context: ../
        dockerfile: ./docker/dockerFiles/api.prod.Dockerfile
      image: api_prod
      env_file:
        - ./environement/.api.env
      restart: on-failure
      ports:
        - 3000:3000

    api_dev:
      networks:
        - back
      build: 
        context: ../
        dockerfile: ./docker/dockerFiles/api.dev.Dockerfile
      image: api_dev
      env_file:
        - ./environement/.api.env
#      volumes:
#        - ../api/:/usr/src/app
      ports:
        - 3000:3000
    
    front_prod:
      build: 
        context: ../
        dockerfile: ./docker/dockerFiles/front.prod.Dockerfile
      image: front_prod
      ports:
        - 80:80
        - 443:443
      networks:
        - front
      restart: on-failure

    front_dev:
      image: nginx:stable-alpine
      networks:
        - front
      ports:
        - 5000:80
      volumes: 
        - ../front/build/:/bin/www
        - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
      restart: on-failure

    utils:
      networks:
        - back
      build: 
        context: ../
        dockerfile: ./docker/dockerFiles/utils.Dockerfile
      image: utils
      volumes:
        - dump_files:/home/


      
networks:
  network:

volumes:
  db_data:
  redis_data:
  dump_files:
    